pipeline{
    agent any
    stages{
        stage("Build"){
            steps{
                echo 'Building'
                sh 'npm install && npm run-script build && npm run-script test'
                echo 'Stashing'
                stash includes: 'pulic/**/*', name: 'build'
                echo 'Publishing jUnit'
                junit 'tests-results/*.xml'
                echo 'Archiving artifacts'
                archiveArtifacts 'public/**/*'
            }
        }
        stage("Deploy"){
            steps{
                echo 'Copying artifacts'
                copyArtifacts(projectName: 'drum-machine-pipeline', target: 'build', selector: lastSuccessful)
                sshPublisher(publishers: [sshPublisherDesc(configName: 'local-docker', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/', remoteDirectorySDF: false, removePrefix: 'build/public', sourceFiles: 'build/public/**/*')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
            }
        }
        stage("Test"){
            steps{
                sh 'curl 127.0.0.1:8081'
            }
        }
    }
    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}